{"version":3,"file":"react-am-formutil.esm.development.js","sources":["../src/CheckboxGroup.tsx","../src/RadioGroup.tsx","../src/FormItem.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Checkbox } from 'antd-mobile';\nimport { ListItemProps } from 'antd-mobile/lib/list/ListItem';\nimport PropTypes from 'prop-types';\n\nconst { CheckboxItem } = Checkbox;\n\nexport interface CheckboxGroupItem extends ListItemProps {\n    value: any;\n    title: React.ReactNode;\n}\n\nexport interface CheckboxGroupProps {\n    onChange?(value: any): void;\n    onFocus?(): void;\n    onBlur?(): void;\n    value?: any[];\n    data: CheckboxGroupItem[];\n}\n\nexport class CheckboxGroup extends Component<CheckboxGroupProps> {\n    static propTypes = {\n        onChange: PropTypes.func,\n        onFocus: PropTypes.func,\n        onBlur: PropTypes.func,\n        value: PropTypes.array\n    };\n\n    static defaultProps = {\n        value: []\n    };\n\n    public render() {\n        const { onChange, value, onFocus, onBlur, data, ...restProps } = this.props;\n        const childOnChange = (childValue, ev) => {\n            const { checked } = ev.target;\n\n            onChange!(checked ? value!.concat(childValue) : value!.filter(v => v !== childValue));\n        };\n\n        return data.map(item => (\n            <CheckboxItem\n                key={item.value}\n                {...restProps}\n                {...item}\n                checked={value!.indexOf(item.value) > -1}\n                children={item.title}\n                onChange={childOnChange.bind(this, item.value)}\n                onFocus={onFocus}\n                onBlur={onBlur}\n            />\n        ));\n    }\n}\n","import React, { Component } from 'react';\nimport { Radio } from 'antd-mobile';\nimport { ListItemProps } from 'antd-mobile/lib/list/ListItem';\nimport PropTypes from 'prop-types';\n\nconst { RadioItem } = Radio;\n\nexport interface RadioGroupItem extends ListItemProps {\n    value: any;\n    title: React.ReactNode;\n}\n\nexport interface RadioGroupProps {\n    onChange?(value: any): void;\n    onFocus?(): void;\n    onBlur?(): void;\n    value?: any[];\n    data: RadioGroupItem[];\n}\n\nexport class RadioGroup extends Component<RadioGroupProps> {\n    static propTypes = {\n        onChange: PropTypes.func,\n        onFocus: PropTypes.func,\n        onBlur: PropTypes.func,\n        value: PropTypes.any\n    };\n\n    public render() {\n        const { onChange, value, onFocus, onBlur, data, ...restProps } = this.props;\n        const childOnChange = childValue => {\n            onChange!(childValue);\n        };\n\n        return data.map(item => (\n            <RadioItem\n                key={item.value}\n                {...restProps}\n                {...item}\n                checked={value === item.value}\n                children={item.title}\n                onChange={childOnChange.bind(this, item.value)}\n                onFocus={onFocus}\n                onBlur={onBlur}\n            />\n        ));\n    }\n}\n","import {\n    Checkbox,\n    DatePicker,\n    ImagePicker,\n    InputItem,\n    List,\n    Modal,\n    Picker,\n    PickerView,\n    Radio,\n    Range,\n    Slider,\n    Switch,\n    TextareaItem\n} from 'antd-mobile';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component } from 'react';\nimport { $FieldHandler, BaseEasyFieldComponentProps, EasyField, FieldValidatorProps, OtherKeys } from 'react-formutil';\nimport { CheckboxGroup } from './CheckboxGroup';\nimport { RadioGroup } from './RadioGroup';\n\nexport type ErrorLevel = 0 | 1 | 2 | 'off';\n\nexport interface FormItemProps<T = any, P = {}, Fields = {}, WeakFields = Fields>\n    extends BaseEasyFieldComponentProps<T, P, Fields, WeakFields> {\n    label?: React.ReactNode;\n    errorLevel?: ErrorLevel;\n    children: React.ReactElement<any>;\n}\n\nconst ListItem = List.Item;\n\nlet errorLevelGlobal = 1;\n\n/**\n * 0 dirty & invalid & touched\n * 1 dirty & invalid\n * 2 invalid\n */\nexport const setErrorLevel = function(level) {\n    errorLevelGlobal = level;\n};\n\nconst isUglify = Switch.name !== 'Switch';\n\nfunction getComponentType(children) {\n    if (children) {\n        if (typeof children.type === 'function') {\n            const func = children.type;\n\n            if (func.formutilType) {\n                return func.formutilType;\n            }\n\n            if (isUglify) {\n                return func;\n            }\n\n            return func.displayName || func.name;\n        } else {\n            return children.props.type || children.type;\n        }\n    }\n}\n\nconst _Checkbox = isUglify ? Checkbox : 'Checkbox';\nconst _Radio = isUglify ? Radio : 'Radio';\nconst _PickerView = isUglify ? PickerView : 'PickerView';\nconst _DatePicker = isUglify ? DatePicker : 'DatePicker';\nconst _Switch = isUglify ? Switch : 'Switch';\nconst _Range = isUglify ? Range : 'Range';\nconst _Picker = isUglify ? Picker : 'Picker';\nconst _ImagePicker = isUglify ? ImagePicker : 'ImagePicker';\nconst _InputItem = isUglify ? InputItem : 'InputItem';\nconst _TextareaItem = isUglify ? TextareaItem : 'TextareaItem';\nconst _Slider = isUglify ? Slider : 'Slider';\nconst _CheckboxItem = isUglify ? Checkbox.CheckboxItem : 'CheckboxItem';\nconst _RadioItem = isUglify ? Radio.RadioItem : 'RadioItem';\nconst _AgreeItem = isUglify ? Checkbox.AgreeItem : 'AgreeItem';\nconst _CheckboxGroup = isUglify ? CheckboxGroup : 'CheckboxGroup';\nconst _RadioGroup = isUglify ? RadioGroup : 'RadioGroup';\n\nexport class FormItem<T = any, P = {}, Fields = {}, WeakFields = Fields> extends Component<\n    FormItemProps<T, P, Fields, WeakFields> & FieldValidatorProps<P> & OtherKeys\n> {\n    public static propTypes = {\n        // @ts-ignore\n        ...ListItem.propTypes,\n        label: PropTypes.any,\n        errorLevel: PropTypes.oneOf([0, 1, 2, 'off']),\n        children: PropTypes.element.isRequired\n    };\n\n    public render() {\n        const { props } = this;\n        const { children: childrenList, className, label, errorLevel = errorLevelGlobal, ...fieldProps } = props as any;\n        const children = Children.only(childrenList);\n        const component = getComponentType(children);\n\n        switch (component) {\n            case _Checkbox:\n            case _Radio:\n            case _Switch:\n            case _CheckboxItem:\n            case _RadioItem:\n            case _AgreeItem:\n                fieldProps.__TYPE__ = 'checked';\n                break;\n\n            case 'checked':\n            case 'array':\n            case 'object':\n            case 'number':\n            case 'empty':\n                fieldProps.__TYPE__ = component;\n                break;\n\n            default:\n                fieldProps.__TYPE__ = 'empty';\n                break;\n        }\n\n        return (\n            <EasyField\n                {...fieldProps}\n                passUtil=\"$fieldutil\"\n                children={(\n                    $fieldHandler: $FieldHandler<any, 'value', 'onChange', 'onFocus', 'onBlur', '$fieldutil'>\n                ) => {\n                    const {\n                        valuePropName = 'value',\n                        changePropName = 'onChange',\n                        focusPropName = 'onFocus',\n                        blurPropName = 'onBlur'\n                    } = props;\n                    const {\n                        $fieldutil,\n\n                        // @ts-ignore\n                        [changePropName]: onChange,\n                        // @ts-ignore\n                        [focusPropName]: onFocus,\n                        // @ts-ignore\n                        [blurPropName]: onBlur,\n                        // @ts-ignore\n                        [valuePropName]: value,\n\n                        ...restProps\n                    } = $fieldHandler;\n                    const { $invalid, $dirty, $touched, $getFirstError, $focused } = $fieldutil;\n\n                    let childProps;\n\n                    switch (component) {\n                        case _Checkbox:\n                        case _Radio:\n                        case _Switch:\n                        case _CheckboxItem:\n                        case _RadioItem:\n                        case _AgreeItem:\n                        case 'checked':\n                            const { checked = true, unchecked = false } = props;\n                            childProps = {\n                                checked: value === checked,\n                                onChange: ev => {\n                                    const newValue = ev && ev.target ? ev.target.checked : ev;\n                                    onChange(newValue ? checked : unchecked, ev);\n                                }\n                            };\n                            break;\n\n                        case _ImagePicker:\n                            childProps = {\n                                onChange,\n                                files: value\n                            };\n                            break;\n\n                        default:\n                            childProps = {\n                                [changePropName]: onChange,\n                                [valuePropName]: value\n                            };\n                            break;\n                    }\n\n                    Object.assign(childProps, {\n                        [focusPropName]: onFocus,\n                        [blurPropName]: onBlur\n                    });\n\n                    let hasError;\n\n                    switch (errorLevel) {\n                        case 0:\n                            hasError = $invalid && $dirty && $touched;\n                            break;\n                        case 1:\n                            hasError = $invalid && $dirty;\n                            break;\n                        case 2:\n                            hasError = $invalid;\n                            break;\n                        default:\n                            hasError = false;\n                            break;\n                    }\n\n                    const allClassNames = {\n                        invalid: $invalid,\n                        valid: !$invalid,\n                        dirty: $dirty,\n                        pristine: !$dirty,\n                        touched: $touched,\n                        untouched: !$touched,\n                        focused: $focused\n                    };\n\n                    // @ts-ignore\n                    restProps.className = Object.keys(allClassNames)\n                        .filter(key => allClassNames[key])\n                        .map(key => `am-formutil-${key}`)\n                        .concat(className)\n                        .filter(Boolean)\n                        .join(' ');\n\n                    const errorProps = hasError\n                        ? {\n                              error: true\n                          }\n                        : {};\n\n                    switch (component) {\n                        case _InputItem:\n                        case _TextareaItem:\n                            // @ts-ignore\n                            errorProps.onErrorClick = () => {\n                                Modal.alert('Error info', $getFirstError());\n                            };\n\n                        case _CheckboxItem:\n                        case _RadioItem:\n                        case _AgreeItem:\n\n                        case _Range:\n                        case _Slider:\n                        case _PickerView:\n                            return cloneElement(children, {\n                                ...restProps,\n                                ...errorProps,\n                                ...childProps,\n                                title: label,\n                                children: label\n                            });\n\n                        case _DatePicker:\n                        case _Picker:\n                            return cloneElement(children, {\n                                ...childProps,\n                                children: (\n                                    <ListItem {...restProps} {...errorProps}>\n                                        {label}\n                                    </ListItem>\n                                )\n                            });\n\n                        case _CheckboxGroup:\n                        case _RadioGroup:\n                            return cloneElement(children, {\n                                ...restProps,\n                                ...errorProps,\n                                ...childProps\n                            });\n\n                        default:\n                            const renderChild = cloneElement(children, childProps);\n\n                            return (\n                                <ListItem\n                                    {...restProps}\n                                    {...errorProps}\n                                    {...(label ? { extra: renderChild, children: label } : { children: renderChild })}\n                                />\n                            );\n                    }\n                }}\n            />\n        );\n    }\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}